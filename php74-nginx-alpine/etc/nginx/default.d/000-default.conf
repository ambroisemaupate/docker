server {
    listen [::]:80 default_server ipv6only=off;
    # Use Roadiz Standard Edition real root.
    root /var/www/html/web;

    index index.php index.html;

    # Kick wordpress brute force attack before it
    # fills Roadiz logs with not-found resources.
    location ~ ^/wp\-(includes|admin|login\.php) {
        return 404;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    location ~ /\.ht {
        deny all;
    }
    location ~ /\.git {
        deny all;
    }

    # Accept custom 404 error pages at project root
    error_page 404 /error-404.html;
    location = /error-404.html {
       root /var/www/html;
       internal;
    }

    # Accept custom 500x error pages at project root
    error_page 500 502 503 504 /error-50x.html;
    location = /error-50x.html {
       root /var/www/html;
       internal;
    }

    location ~ ^/themes/(.+)\.(php|yml|twig|xlf|rzn|rzt|rzg)$ {
        deny all;
    }

    location ~ ^/bundles/(.+)\.(php|yml|twig|xlf|rzn|rzt|rzg)$ {
        deny all;
    }
    # Enable Expire on Themes public assets
    location ~* ^/(?:bundles|themes|files|assets|storage)/*.*\.(?:ico|css|js|woff2?|eot|ttf|otf|svg|gif|jpe?g|png|webp|avif|mp4|webm)$ {
        # Serve not found files with PHP
        try_files $uri $uri/ /index.php$is_args$args;

        expires 1y;
        access_log off;
        add_header "Pragma" "public";
        add_header "Cache-Control" "public";
        add_header "Vary" "Accept-Encoding";
        add_header "X-Frame-Options" "SAMEORIGIN";
        add_header "X-XSS-Protection" "1; mode=block";
        add_header "X-Content-Type-Options" "nosniff";
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

        if ($request_method = 'OPTIONS') {
            access_log off;
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to front-end controller
        # (do not forget to pass GET parameters).
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ /install.php/ {
        try_files $uri $uri/ /install.php$is_args$args;
    }
    location ~ /dev.php/ {
        try_files $uri $uri/ /dev.php$is_args$args;
    }
    location ~ /preview.php/ {
        try_files $uri $uri/ /preview.php$is_args$args;
    }
    location ~ /clear_cache.php/ {
        try_files $uri $uri/ /clear_cache.php$is_args$args;
    }

    #
    # Production entry point.
    #
    location ~ ^/index\.php(/|$) {
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass unix:/var/run/php-fpm.sock;
        fastcgi_index index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
        include fastcgi_params;
        try_files $uri =404;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    #
    # Preview, Dev and Install entry points.
    #
    # In production server, don't deploy dev.php or install.php
    #
    location ~ ^/(dev|install|preview|clear_cache)\.php(/|$) {
        # Enforce file cache invalidation at each request
        fastcgi_param PHP_VALUE "opcache.revalidate_freq=0";
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass unix:/var/run/php-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
        include fastcgi_params;
        try_files $uri =404;
    }

    # Don't log robots.txt or favicon.ico files
    location = /favicon.ico { log_not_found off; access_log off; }
    location = /robots.txt  { allow all; access_log off; log_not_found off; }
}
